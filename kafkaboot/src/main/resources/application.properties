spring.kafka.consumer.bootstrap-servers=127.0.0.1:9191,127.0.0.1:9192,127.0.0.1:9193
#消费者
spring.kafka.consumer.group-id=myGroup
#是否自动提交
spring.kafka.consumer.enable-auto-commit=true
#自动提交间隔
spring.kafka.consumer.auto-commit-interval=10s
spring.kafka.consumer.client-id=myconsumerId
#想broker发送心跳的间隔
spring.kafka.consumer.heartbeat-interval=500ms
#客户端每次拉取数据最大不超过15条，这个具体值如何收broker分区上信息数量的控制，也会受到
spring.kafka.consumer.max-poll-records=15
#客户端的key解析类
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#客户端的value解析类
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#客户端配置

#生产者
spring.kafka.producer.client-id=myProduct
#事务id前缀
spring.kafka.producer.transaction-id-prefix=myTransactionIdPrexfix
#ack模式，有三种,使用事务的时候acks必须为all且retries不能为0
spring.kafka.producer.acks=all
#kafka集群地址
spring.kafka.producer.bootstrap-servers=127.0.0.1:9191,127.0.0.1:9192,127.0.0.1:9193
#重试次数
spring.kafka.producer.retries=1
#服务端的key编码类
spring.kafka.producer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer
#服务端的value编码类
spring.kafka.producer.value-deserializer=org.apache.kafka.common.serialization.StringSerializer
#压缩类型,这个要尽量同broker集群的压缩类型一致，不然会发生压缩类型转化，客户端没有发现对应的压缩类型参数
spring.kafka.producer.compression-type=gzip
#生产者用来缓存记录的缓存空间大小默认为33554432
spring.kafka.producer.buffer-memory=33554432
#批量发送数据，这个值过大过小都会对性能产生影响。
spring.kafka.producer.batch-size=100
spring.kafka.producer.properties.
#生产者，发送信息后，接收broker返回ack信息的超时时间，这个值应该大于等于request.timeout.ms ,linger.ms
spring.kafka.producer.properties.delivery.timeout.ms=150000
#一旦发往分区记录的数据等于batch.size值，无论此设置如何，它都会立即发送，但是，如果我们为该分区积累少于这个batch.size，我们将“持续指定的时间，等待更多记录显示。此设置默认为0（即无延迟）。
spring.kafka.producer.properties.linger.ms=5000
#生产者等待请求响应的最大时间，默认为30000ms
spring.kafka.producer.properties.request.timeout.ms=30000

#业务配置，订单业务
order.product.topic.name=TOPIC_TEST1
order.product.topic.partition=0
order.consumer.topic.name=TOPIC_TEST1
order.consumer.topic.partition=0
#业务配置，交易业务
trade.product.topic.name=TOPIC_TEST2
trade.product.topic.partition=0
trade.consumer.topic.name=TOPIC_TEST2
trade.consumer.topic.partition=0


